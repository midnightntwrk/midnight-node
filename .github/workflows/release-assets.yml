name: Create Release Assets

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release tag to attach to'
        required: true

jobs:
  create-release-assets:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - name: Login to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef  #v3.6.0
        with:
          registry: ghcr.io
          username: MidnightCI
          password: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Extract files from Docker image
        run: |
          RELEASE_TAG="${{ github.event.inputs.releaseTag || github.event.release.tagName }}"
          # Strip "node-" prefix to get image tag
          IMAGE_TAG="${RELEASE_TAG#node-}"
          IMAGE_NAME="ghcr.io/midnight-ntwrk/midnight-node:${IMAGE_TAG}"
          RELEASE_NAME="${RELEASE_TAG}-linux-${{ matrix.platform }}.tar.gz"

          echo "Release tag: $RELEASE_TAG"
          echo "Image tag: $IMAGE_TAG"
          echo "Extracting from: $IMAGE_NAME"
          echo "Creating: $RELEASE_NAME"

          docker pull --platform linux/${{ matrix.platform }} "$IMAGE_NAME"

          # Create container and extract files
          CONTAINER_ID=$(docker create "$IMAGE_NAME")
          docker cp "$CONTAINER_ID:/midnight-node" ./
          docker cp "$CONTAINER_ID:/res" ./
          docker rm "$CONTAINER_ID"

          # Create tar.gz
          tar -czf "$RELEASE_NAME" midnight-node res

          echo "RELEASE_FILE=$RELEASE_NAME" >> $GITHUB_ENV

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG="${{ github.event.inputs.releaseTag || github.event.release.tagName }}"
          gh release upload --repo "$GITHUB_REPOSITORY" "$RELEASE_TAG" ${{ env.RELEASE_FILE }}
