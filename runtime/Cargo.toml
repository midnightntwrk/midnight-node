[package]
name = "midnight-node-runtime"
version = "0.2.3"
description = "A fresh FRAME-based Substrate node, ready for hacking."
authors = ["Substrate DevHub <https://github.com/substrate-developer-hub>"]
edition = "2024"
license = "Unlicense"
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
log.workspace = true
parity-scale-codec.workspace = true
scale-info.workspace = true

frame-support.workspace = true
frame-system.workspace = true
frame-try-runtime = { workspace = true, optional = true }
frame-executive.workspace = true
pallet-aura.workspace = true
pallet-balances.workspace = true
pallet-beefy.workspace = true
pallet-beefy-mmr.workspace = true
pallet-grandpa.workspace = true
pallet-preimage.workspace = true
pallet-mmr.workspace = true
pallet-sudo.workspace = true
pallet-scheduler.workspace = true
pallet-timestamp.workspace = true
pallet-tx-pause.workspace = true
pallet-migrations.workspace = true
pallet-governed-map.workspace = true
sp-api.workspace = true
sp-arithmetic.workspace = true
sp-block-builder.workspace = true
sp-consensus-aura.workspace = true
sp-consensus-beefy.workspace = true
sp-consensus-grandpa.workspace = true
sp-consensus-slots.workspace = true
sp-core.workspace = true
sp-genesis-builder.workspace = true
sp-inherents.workspace = true
sp-native-token-management.workspace = true
sp-offchain.workspace = true
sp-runtime.workspace = true
sp-session.workspace = true
sp-staking.workspace = true
sp-std.workspace = true
sp-transaction-pool.workspace = true
sp-version.workspace = true
sp-storage.workspace = true
sp-governed-map.workspace = true

# Sidechains primitives
sp-session-validator-management = { workspace = true, features = ["serde"] }
sp-sidechain.workspace = true

hex.workspace = true

# Used for the node template's RPCs
frame-system-rpc-runtime-api.workspace = true

# Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# Sidechain Dependencies
authority-selection-inherents.workspace = true
#pallet-block-rewards.workspace = true
#sp-block-rewards.workspace = true
pallet-partner-chains-session.workspace = true
pallet-native-token-management.workspace = true
pallet-sidechain.workspace = true
pallet-session.workspace = true
pallet-session-validator-management.workspace = true
pallet-session-validator-management-benchmarking = { workspace = true, optional = true }
sidechain-domain = { workspace = true, features = ["serde"] }
sidechain-slots.workspace = true

# Midnight Dependencies
midnight-node-ledger.workspace = true
pallet-midnight.workspace = true
pallet-upgrade.workspace = true
pallet-version.workspace = true
pallet-native-token-observation.workspace = true
midnight-primitives-upgrade-api.workspace = true
midnight-primitives-native-token-observation.workspace = true

[dev-dependencies]
sp-io.workspace = true
sp-consensus-slots.workspace = true
plutus.workspace = true
serde.workspace = true

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[features]
default = ["std"]
std = [
    "authority-selection-inherents/std",
    "frame-try-runtime?/std",
    "frame-system-benchmarking?/std",
    "frame-benchmarking/std",
    "parity-scale-codec/std",
    "frame-executive/std",
    "frame-support/std",
    "frame-system-rpc-runtime-api/std",
    "frame-system/std",
    "frame-try-runtime/std",
    "midnight-primitives-upgrade-api/std",
    "pallet-aura/std",
    "pallet-balances/std",
    "pallet-beefy/std",
    "pallet-beefy-mmr/std",
    "pallet-grandpa/std",
    "pallet-midnight/std",
    "pallet-mmr/std",
    "pallet-upgrade/std",
    "pallet-native-token-management/std",
    "pallet-version/std",
    "pallet-native-token-observation/std",
    "pallet-preimage/std",
    "pallet-sudo/std",
    "pallet-scheduler/std",
    "pallet-timestamp/std",
    "pallet-migrations/std",
    "pallet-governed-map/std",
    "sp-api/std",
    "sp-arithmetic/std",
    "sp-block-builder/std",
    #"sp-block-rewards/std",
    "sp-consensus-aura/std",
    "sp-consensus-beefy/std",
    "sp-consensus-grandpa/std",
    "sp-consensus-slots/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-native-token-management/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-session-validator-management/std",
    "sp-sidechain/std",
    "sp-staking/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    "sp-storage/std",
    "sp-genesis-builder/std",
    "sp-governed-map/std",
    "substrate-wasm-builder",
    #"pallet-block-rewards/std",
    "pallet-sidechain/std",
    "pallet-session/std",
    "pallet-partner-chains-session/std",
    "pallet-session-validator-management/std",
    "pallet-session-validator-management-benchmarking?/std",
    "pallet-tx-pause/std",
    "sidechain-domain/std",
    "sidechain-slots/std",
    "sp-io/std",
    "midnight-primitives-native-token-observation/std"
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system-benchmarking/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-beefy-mmr/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-midnight/runtime-benchmarks",
    # TODO: Enable native-token-mgmt benchmarks when available
    # "pallet-native-token-management/runtime-benchmarks",
    "pallet-scheduler/runtime-benchmarks",
    "pallet-sudo/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-tx-pause/runtime-benchmarks",
    "pallet-migrations/runtime-benchmarks",
    "sp-runtime/runtime-benchmarks",
    "pallet-session-validator-management-benchmarking/runtime-benchmarks",
    "pallet-upgrade/runtime-benchmarks",
    "pallet-midnight/runtime-benchmarks",
]
try-runtime = [
    "frame-try-runtime/try-runtime",
    "frame-executive/try-runtime",
    "frame-system/try-runtime",
    "frame-support/try-runtime",
    "pallet-aura/try-runtime",
    "pallet-balances/try-runtime",
    "pallet-beefy/try-runtime",
    "pallet-beefy-mmr/try-runtime",
    "pallet-grandpa/try-runtime",
    "pallet-midnight/try-runtime",
    # TODO: Enable native token mgmt try runtime feature when available
    # "pallet-native-token-management/try-runtime",
    "pallet-mmr/try-runtime",
    "pallet-scheduler/try-runtime",
    "pallet-sudo/try-runtime",
    "pallet-timestamp/try-runtime",
    "pallet-tx-pause/try-runtime",
    "pallet-migrations/try-runtime",
]
experimental = []

[package.metadata.cargo-shear]
ignored = ["scale-info", "parity-scale-codec", "serde"]
