// .papi/descriptors/src/undeployed_metadata.ts
var binMeta = "";
var undeployed_metadata_default = binMeta;
export {
  undeployed_metadata_default as default
};
