-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

- From ffc73a92a6f0c9d0b5b2ba3ff407abfcc26dbe5e Mon Sep 17 00:00:00 2001
From: Sebastian Bach <sebtomba@gmail.com>
Date: Mon, 19 Jun 2023 16:41:27 +0200
Subject: [PATCH] [PM-6003] Update block weight configuration

- ---
 pallets/midnight/src/lib.rs     | 8 ++++++--
 pallets/midnight/src/weights.rs | 9 ++++++---
 runtime/src/lib.rs              | 5 ++---
 3 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/pallets/midnight/src/lib.rs b/pallets/midnight/src/lib.rs
index fa337578..da4d6640 100644
- --- a/pallets/midnight/src/lib.rs
+++ b/pallets/midnight/src/lib.rs
@@ -193,8 +193,12 @@ pub mod pallet {
 					Self::invalid_transaction()
 				})?;
 
- -				log::info!(target: RUNTIME_LOG_TARGET, "✅ Validated Midnight transaction");
- -				ValidTransaction::with_tag_prefix("Midnight").and_provides("tx").build()
+				log::info!(
+					target: RUNTIME_LOG_TARGET,
+					"✅ Validated Midnight transaction {}",
+					tx.hash()
+				);
+				ValidTransaction::with_tag_prefix("Midnight").and_provides(tx.hash()).build()
 			} else {
 				Err(Self::invalid_transaction())
 			}
diff --git a/pallets/midnight/src/weights.rs b/pallets/midnight/src/weights.rs
index f8fdfdca..c4e90661 100644
- --- a/pallets/midnight/src/weights.rs
+++ b/pallets/midnight/src/weights.rs
@@ -1,11 +1,14 @@
 use frame_support::{
 	traits::Get,
- -	weights::{constants::RocksDbWeight, Weight},
+	weights::{constants, Weight},
 };
+
 use std::marker::PhantomData;
 
 pub const FIXED_MN_TRANSACTION_WEIGHT: u64 = 1_000_000_000;
- -pub const FIXED_MN_BLOCK_WEIGHT: u64 = 10u64 * FIXED_MN_TRANSACTION_WEIGHT;
+pub const FIXED_MN_TRANSACTION_COUNT: u64 = 10;
+pub const FIXED_MN_BLOCK_WEIGHT: Weight =
+	Weight::from_parts((FIXED_MN_TRANSACTION_COUNT + 1u64) * FIXED_MN_TRANSACTION_WEIGHT, 1_000u64);
 
 pub trait WeightInfo {
 	fn mn_transaction_weight(midnight_tx: &Vec<u8>) -> Weight;
@@ -22,6 +25,6 @@ impl<T: frame_system::Config> WeightInfo for MidnightWeight<T> {
 impl WeightInfo for () {
 	fn mn_transaction_weight(_midnight_tx: &Vec<u8>) -> Weight {
 		Weight::from_parts(FIXED_MN_TRANSACTION_WEIGHT, 0)
- -			.saturating_add(RocksDbWeight::get().writes(1 as u64))
+			.saturating_add(constants::RocksDbWeight::get().writes(1 as u64))
 	}
 }
diff --git a/runtime/src/lib.rs b/runtime/src/lib.rs
index 2c42734b..f062435e 100644
- --- a/runtime/src/lib.rs
+++ b/runtime/src/lib.rs
@@ -139,17 +139,16 @@ const NORMAL_DISPATCH_RATIO: Perbill = Perbill::from_percent(75);
 fn block_weights_fixed_size() -> frame_system::limits::BlockWeights {
 	let expected_block_weight: Weight =
 		Weight::from_parts(2u64 * WEIGHT_REF_TIME_PER_SECOND, u64::MAX);
- -	let normal_weight = NORMAL_DISPATCH_RATIO * expected_block_weight;
- -	normal_weight.set_ref_time(pallet_midnight::FIXED_MN_BLOCK_WEIGHT);
+	let normal_weight = pallet_midnight::FIXED_MN_BLOCK_WEIGHT;
 	frame_system::limits::BlockWeights::builder()
 		.for_class(frame_support::dispatch::DispatchClass::Normal, |weights| {
 			weights.max_total = normal_weight.into();
+			weights.base_extrinsic = Weight::zero();
 		})
 		.for_class(frame_support::dispatch::DispatchClass::Operational, |weights| {
 			weights.max_total = expected_block_weight.into();
 			weights.reserved = (expected_block_weight - normal_weight).into();
 		})
- -		.avg_block_initialization(Perbill::from_percent(10))
 		.build()
 		.expect("Sensible defaults are tested to be valid; qed")
 }
- -- 
2.46.0

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEE9Oz16eF+Nv5C7TpSdEmbFI1hGmwFAmhtArIACgkQdEmbFI1h
Gmx3Ag/+JgVcYwSo9N+tjifUnbBv7Jdmo207G1qAq/S+SXMZl6QlCCvAmznlDetS
9N8Y3CXcjDwJqfE1UIaSHUoMlr/kirfw4y0iCtWSJ+Dy2QUsRMyQeHRH+ndBTffs
ua/pXgwoTy9ilMiQ5MVlrz5GCD/byAf8ArCTxq1SvF6xsn1++6GVUse1m+wEalqz
O+c2zJjJNYIDAhSL5mHYoBBIf6sfWGhxUBaiNsI7xiuZwRXRNA6w6VDhbxPMPpE0
qnVbx8+SzkmVobxrpo5MRx1xni8lFnf0NOhVA011hiw5BYgBxi1Xp/rXs34rFZgd
T8RY7CMpQ/ZfOEq97ld/JYf04LXxQnQGx2m7xy6i6OdyD9EaPLa5LkJBWHJJPDJY
NPQIOZ0VOwvfYh6l+G+ZZt+MUOFvFyto4HSuRgKoy1JqRDBiFl+ReLYza4AxZpyo
T71tLI4/1LJKZpzt5x/Y2eb8raQE6YMlW6RB8fQADik1s+NrxL9/voNDk0gktfXV
RHR6SQjhn+7s3yvVXl2rj0wl57AzrZFsUXC/EoW6JdON0zq+ZAMG/ZrVBmql+bQO
9EPj9RX8w3WGsAjNK8J1LB0i4TVpug6XO04nsQZp628cqx1eoCm4yPHMsBS28idf
NuV7eFKobJqa/wOEqS+O/LkbXoxH/Y8QJhcZwhrcptmKWPIOHlM=
=ohcH
-----END PGP SIGNATURE-----
