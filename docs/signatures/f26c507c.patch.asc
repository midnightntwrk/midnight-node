-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

- From f26c507ca83bf168ec7655a696934d5331e96f2c Mon Sep 17 00:00:00 2001
From: Sebastian Bach <sebtomba@gmail.com>
Date: Wed, 17 May 2023 13:47:22 +0200
Subject: [PATCH] [PM-6116] Add validate transaction unit tests

- ---
 pallets/template/src/ledger_bridge.rs | 25 +++++++++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

diff --git a/pallets/template/src/ledger_bridge.rs b/pallets/template/src/ledger_bridge.rs
index d25d5d7d..7bfd985c 100644
- --- a/pallets/template/src/ledger_bridge.rs
+++ b/pallets/template/src/ledger_bridge.rs
@@ -46,13 +46,13 @@ pub fn init_new_state() -> Vec<u8> {
 	state
 }
 
- -fn deserialize_transaction(encoded_transaction: &Vec<u8>) -> Result<Transaction<Proof>, SerdeError> {
+fn deserialize_transaction(encoded_transaction: &[u8]) -> Result<Transaction<Proof>, SerdeError> {
 	let tx: &str = std::str::from_utf8(encoded_transaction).unwrap();
 	let tx: Transaction<Proof> = from_str(tx)?;
 	Ok(tx)
 }
 
- -pub fn validate_transaction(encoded_transaction: &Vec<u8>) -> Result<(), ValidationError> {
+pub fn validate_transaction(encoded_transaction: &[u8]) -> Result<(), ValidationError> {
 	let tx = deserialize_transaction(encoded_transaction)?;
 	tx.well_formed(None)?;
 	Ok(())
@@ -97,3 +97,24 @@ pub fn get_contract_state(contract_address: [u8; 32], state: &Vec<u8>) -> Vec<u8
 
 	stringified.into_bytes()
 }
+
+#[cfg(test)]
+mod tests {
+	use super::*;
+	#[test]
+	fn should_validate_transaction() {
+		let tx = include_bytes!("../../../tx_json/deploy.json");
+		let result = validate_transaction(tx);
+		assert!(result.is_ok(), "Validation failed with: {}", result.unwrap_err());
+	}
+
+	#[test]
+	fn should_fail_with_serialization_error() -> Result<(), String> {
+		let tx = "Invalid Tx".as_bytes();
+		match validate_transaction(tx) {
+			Err(ValidationError::DeserializationError(_)) => Ok(()),
+			Err(e @ ValidationError::MalformedError(_)) => Err(format!("Validation failed with: {}", e)),
+			Ok(_) => Err(String::from("Validation should have failed"))
+		}
+	}
+}
- -- 
2.46.0

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEE9Oz16eF+Nv5C7TpSdEmbFI1hGmwFAmhtArMACgkQdEmbFI1h
Gmy0YA//bVYE9+PTfJyuZ8b3fPUR0SRDuVPMNKOyqA8vfmy7Xzkg1kMnButNn/JA
2pPtQtDWvERaShAbnwEBSf4o0qlYLO7TpPdQZg7eLszN2dnmoIlfcRW3A2xr8ge3
Qg/xOiItD4IZdMVZV+TwcFQQoIe0Smfe9vjPDKxka2EP8BJihR5b4skjsF85x/DU
a5okn8sSINPCTTm4pThVhIK4k+usqvR3LbWF9pvkN9AoVe/LQdWykGKOg2Fl2lOg
Fwee3AD6G63P8ia23pVkqo5qgRaPHa+2RigOOlJcSiHsNuLoxqxkmZCbz45dzsl6
ls6Jt3bpiN7gOFiVtnV93uabJOLR5I0hLbb/koJYrG1Nt5g5XzlgTF7BxyrgDyP+
f2XFiwoUonQE+PSctGSCoImAGy6W/GNcVMSLPphiQKHFpsDDFV1XmewDcGt296Dx
4ZXrZVh22QB55ZhKo+jKyOQopF/uYUnsagzSVm45G3RolpX/Nw0RHERdUQ6MJT7m
AejCHP0Jj1oiM54TbZ/XmBe5jgDeRUKy3UonqWg04BqrdB0etcHzd6ZOrNTT/5qr
l9eO48674OAnP+oqnMVm0YVrEuKtTaNoB6XcN2/TKYZ4DJn4taLNlJZpraWmo9gk
J40ZNN5RatIASuchB6Vru5wZYLLm70l6wHqrSHTG61c902qLZW8=
=Ymfn
-----END PGP SIGNATURE-----
