-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

- From 1edf63d136ac9e7d9405c779957ddfe38714d203 Mon Sep 17 00:00:00 2001
From: Sebastian Bach <sebtomba@gmail.com>
Date: Sun, 28 May 2023 20:50:03 +0200
Subject: [PATCH] [PM-6226] User new midnight-ledger in node

- ---
 Cargo.lock                |  2 ++
 ledger/Cargo.toml         |  1 +
 ledger/src/transaction.rs |  3 ++-
 node/Cargo.toml           |  2 ++
 node/src/midnightrpc.rs   | 13 +++++--------
 5 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/Cargo.lock b/Cargo.lock
index 6bf56abc..cc0ff330 100644
- --- a/Cargo.lock
+++ b/Cargo.lock
@@ -4549,6 +4549,7 @@ dependencies = [
  "midnight-coin-structure",
  "midnight-lares-compitales",
  "midnight-ledger 2.0.0-pre-0.1",
+ "serde",
  "serde_json",
 ]
 
@@ -4586,6 +4587,7 @@ dependencies = [
  "jsonrpsee",
  "midnight-base-crypto",
  "midnight-lares-compitales",
+ "midnight-ledger 0.1.0",
  "midnight-ledger 2.0.0-pre-0.1",
  "midnight-node-runtime",
  "midnight-storage",
diff --git a/ledger/Cargo.toml b/ledger/Cargo.toml
index 8c6227ae..740bac5f 100644
- --- a/ledger/Cargo.toml
+++ b/ledger/Cargo.toml
@@ -10,5 +10,6 @@ midnight-base-crypto = { git = "https://github.com/input-output-hk/midnight-foun
 coin-structure = { git = "https://github.com/input-output-hk/midnight-foundations", package = "midnight-coin-structure", features = ["fake"] }
 
 ciborium = { version = "0.2.0" }
+serde = { version = "^1.0.0", features = ["derive", "rc"] }
 serde_json = { version = "1.0" }
 hex = { version = "0.4.3" }
diff --git a/ledger/src/transaction.rs b/ledger/src/transaction.rs
index 5b2c8ead..31cf2e28 100644
- --- a/ledger/src/transaction.rs
+++ b/ledger/src/transaction.rs
@@ -1,5 +1,6 @@
 use midnight_base_crypto::proofs::Proof;
 use mn_ledger::structure::{CallOrDeploy, Transaction as Tx};
+use serde::{Deserialize, Serialize};
 use serde_json::from_str;
 use std::fmt::{Display, Formatter};
 
@@ -17,7 +18,7 @@ impl From<mn_ledger::error::MalformedTransaction> for MalformedError {
 	}
 }
 
- -#[derive(Clone, Debug, PartialEq, Eq)]
+#[derive(Clone, Debug, PartialEq, Eq, Deserialize, Serialize)]
 pub struct Transaction(Tx<Proof>);
 
 impl Transaction {
diff --git a/node/Cargo.toml b/node/Cargo.toml
index 8c21f563..330c3a0c 100644
- --- a/node/Cargo.toml
+++ b/node/Cargo.toml
@@ -22,6 +22,8 @@ futures = { version = "0.3.21", features = ["thread-pool"] }
 
 hex = "0.4.3"
 
+midnight-ledger = { version = "0.1.0", path = "../ledger" }
+
 ledger = { git = "https://github.com/input-output-hk/midnight-ledger-prototype", package = "midnight-ledger", features = ["transaction-construction", "proving"] }
 lares-compitales = { git = "https://github.com/input-output-hk/abcirdc", package = "midnight-lares-compitales" }
 ledger-storage = { git = "https://github.com/input-output-hk/midnight-foundations", package = "midnight-storage", features = ["fake"] }
diff --git a/node/src/midnightrpc.rs b/node/src/midnightrpc.rs
index 165803e8..b9c3733d 100644
- --- a/node/src/midnightrpc.rs
+++ b/node/src/midnightrpc.rs
@@ -4,8 +4,7 @@ use std::{
 };
 
 use jsonrpsee::{core::RpcResult, proc_macros::rpc, types::error::CallError};
- -use ledger::structure::Transaction;
- -use midnight_base_crypto::proofs::Proof;
+use midnight_ledger::Transaction;
 use midnight_node_runtime::midnight_api::MidnightRuntimeApi;
 use sc_client_api::BlockBackend;
 use sp_api::ProvideRuntimeApi;
@@ -35,11 +34,11 @@ impl<A, B> Midnight<A, B> {
 
 use midnight_node_runtime::TransactionType;
 use serde::{Deserialize, Serialize};
- -use serde_json::{from_str, to_string};
+use serde_json::to_string;
 
 #[derive(Clone, PartialEq, Eq, Debug, Deserialize, Serialize)]
 enum RpcTransaction {
- -	MidnightTransaction(Transaction<Proof>),
+	MidnightTransaction(Transaction),
 	MalformedMidnightTransaction,
 	Timestamp(u64),
 	UnknownTransaction,
@@ -138,10 +137,8 @@ where
 			.iter()
 			.map(|tx| match tx {
 				TransactionType::MidnightTx(transaction_bytes) => {
- -					let Ok(transaction_str) = std::str::from_utf8(transaction_bytes) else { return RpcTransaction::MalformedMidnightTransaction; };
- -					let Ok(decoded) = from_str(transaction_str) else { return RpcTransaction::MalformedMidnightTransaction; };
- -
- -					RpcTransaction::MidnightTransaction(decoded)
+					let Ok(tx) = Transaction::from_bytes(transaction_bytes) else { return RpcTransaction::MalformedMidnightTransaction; };
+					RpcTransaction::MidnightTransaction(tx)
 				}
 				TransactionType::TimestampTx(time) => RpcTransaction::Timestamp(*time),
 				TransactionType::UnknownTx => RpcTransaction::UnknownTransaction,
- -- 
2.46.0

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEE9Oz16eF+Nv5C7TpSdEmbFI1hGmwFAmhtArIACgkQdEmbFI1h
Gmw+SA/7B+mu01XZT558cUrFsJaaYMCHuBC6d3IJLrVfLLXWoIE09JH5qFp01Mtz
BkRDAK86dbtBqAcJcX53dVuO8a9OrOyuEWFplQC58EczgpQuk7hzRDpbm+t+VVoq
d3Rz4eKU6FORLkXD23O6JeVjTZ9PJFtaD1qMHeBt0kqS5GyUOzGql+uCS7u/sktj
iQWstz+P+NU/VJ16l0OpHHD0xAMch0pG1URfJ1gZY40nT649b9bzgRfNII9FGo0Y
/0QgBMjWr3gLdt7EQ+qSerpNoYZMJ36MtdDsbbY8x0khIqFVLGZGdJTO4/tR2JbS
aBOGH/P9A3DA72krIya7gDbd9mEseTfi403/9dI2+8J4jpf5Mss88EEh3on52G1T
k5w1Qc5A9cR8lD9tZg/mh0KZfuoLhhgyy9U1Sfda1omUGd+qPBX8yfBhZZsngeBu
p0lH/ww6Sol+p61V5Zd1fI9hU7dG9g72kUo+1pakgTOc196ORo6z/oWeWjspy4N8
sygsg1Fq+a+nHDtcIJ+KvTMlP584d8BM6q/dLXTsJB/utAojkqgFMX/Ax7dR4R+K
SmyYuc7jeAtsdMygpdYQzE9ZcLIJP4kMfSlfZIM1VUTQ85pGV2iXC14z1T7MUV5C
2+tGON0rISksZxGNA0M8q/kj19WjdA+Iat869LriD5b4TpgcjjE=
=xbxY
-----END PGP SIGNATURE-----
